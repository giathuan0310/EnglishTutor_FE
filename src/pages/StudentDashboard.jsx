import React, { useState, useEffect } from 'react';
import './StudentDashboard.css';

const StudentDashboard = ({ onNavigate, onBack }) => {
  const [activeTab, setActiveTab] = useState('overview');

  // State cho th√¥ng tin user
  const [studentData, setStudentData] = useState(null);
  const [studentLoading, setStudentLoading] = useState(true);

  // --- THAY ƒê·ªîI 1: Th√™m state cho danh s√°ch bu·ªïi h·ªçc ---
  const [myBookings, setMyBookings] = useState([]);
  const [bookingsLoading, setBookingsLoading] = useState(true);
  const [apiError, setApiError] = useState(null);

  // --- THAY ƒê·ªîI 2: Fetch c·∫£ th√¥ng tin user v√† danh s√°ch bu·ªïi h·ªçc ---
  useEffect(() => {
    const token = localStorage.getItem('accessToken');
    if (!token) {
      setApiError("Kh√¥ng t√¨m th·∫•y token x√°c th·ª±c. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.");
      setStudentLoading(false);
      setBookingsLoading(false);
      return;
    }

    // H√†m fetch th√¥ng tin user
    const fetchUser = async () => {
      try {
        const res = await fetch('https://englishtutor-be.onrender.com/users/me', {
          headers: { Authorization: `Bearer ${token}` }
        });
        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin h·ªçc vi√™n.");
        const data = await res.json();
        setStudentData(data);
      } catch (err) {
        setApiError(err.message);
      } finally {
        setStudentLoading(false);
      }
    };

    // H√†m fetch danh s√°ch bu·ªïi h·ªçc
    const fetchMyBookings = async () => {
      try {
        const res = await fetch('https://englishtutor-be.onrender.com/bookings/my-bookings', {
          headers: { Authorization: `Bearer ${token}` }
        });
        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i l·ªãch s·ª≠ bu·ªïi h·ªçc.");
        const data = await res.json();
        setMyBookings(data);
      } catch (err) {
        setApiError(err.message);
      } finally {
        setBookingsLoading(false);
      }
    };

    fetchUser();
    fetchMyBookings();
  }, []); // M·∫£ng r·ªóng ƒë·∫£m b·∫£o ch·ªâ ch·∫°y 1 l·∫ßn

  // --- COMPONENT T·ªîNG QUAN (Gi·ªØ nguy√™n, ch·ªâ th√™m x·ª≠ l√Ω loading/error) ---
  const renderOverview = () => {
    if (studentLoading) return <div>ƒêang t·∫£i th√¥ng tin h·ªçc vi√™n...</div>;
    if (!studentData) return <div>Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu. Vui l√≤ng th·ª≠ l·∫°i.</div>;

    return (
      <div className="overview-section">
        <div className="welcome-card">
          <h2>Ch√†o m·ª´ng tr·ªü l·∫°i, {studentData.name}!</h2>
          <p>Email: {studentData.email}</p>
          <p>S·ªë ƒëi·ªán tho·∫°i: {studentData.phone}</p>
        </div>
        <div className="quick-actions">
          <h3>H√†nh ƒë·ªông nhanh</h3>
          <div className="action-buttons">
            <button onClick={() => onNavigate('teachers')} className="action-btn">
              <span className="action-icon">üë®‚Äçüè´</span> T√¨m gi√°o vi√™n
            </button>
            <button onClick={() => onNavigate('pricing')} className="action-btn">
              <span className="action-icon">üí∞</span> Mua th√™m g√≥i h·ªçc
            </button>
          </div>
        </div>
      </div>
    );
  };

  // --- THAY ƒê·ªîI 3: Vi·∫øt l·∫°i ho√†n to√†n tab "My Teacher" ---
  const renderTeacher = () => {
    if (bookingsLoading) return <div>ƒêang t·∫£i danh s√°ch bu·ªïi h·ªçc...</div>;
    if (apiError) return <div>L·ªói: {apiError}</div>;
    if (myBookings.length === 0) {
      return (
        <div className="empty-state">
          <h2>B·∫°n ch∆∞a c√≥ bu·ªïi h·ªçc n√†o</h2>
          <p>H√£y b·∫Øt ƒë·∫ßu t√¨m ki·∫øm gi√°o vi√™n v√† ƒë·∫∑t l·ªãch h·ªçc th·ª≠ ngay h√¥m nay!</p>
          <button onClick={() => onNavigate('teachers')} className="action-btn">
            T√¨m gi√°o vi√™n ngay
          </button>
        </div>
      );
    }

    return (
      <div className="my-teacher-section">
        <h2>C√°c bu·ªïi h·ªçc c·ªßa t√¥i</h2>
        <div className="bookings-list">
          {myBookings.map(booking => (
            <div key={booking._id} className="booking-card">
              <div className="teacher-info">
                <img
                  src={booking.tutor?.avatarUrl || 'default-avatar.png'}
                  alt={booking.tutor?.name}
                  className="teacher-avatar"
                />
                <div>
                  <h4>Gi√°o vi√™n: {booking.tutor?.name || 'Kh√¥ng x√°c ƒë·ªãnh'}</h4>
                  <p>{booking.tutor?.specializations?.join(', ')}</p>
                </div>
              </div>
              <div className="booking-details">
                <p><strong>Ng√†y h·ªçc:</strong> {new Date(booking.bookingDate).toLocaleDateString('vi-VN')}</p>
                <p><strong>Gi·ªù h·ªçc:</strong> {new Date(booking.bookingDate).toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' })}</p>
                <p><strong>Tr·∫°ng th√°i:</strong> <span className={`status-badge ${booking.status}`}>{booking.status}</span></p>
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  };

  // --- THAY ƒê·ªîI 4: Vi·∫øt l·∫°i ho√†n to√†n tab "Th√¥ng tin g√≥i h·ªçc" ---
  const renderPackageInfo = () => {
    if (studentLoading) return <div>ƒêang t·∫£i th√¥ng tin g√≥i h·ªçc...</div>;
    if (!studentData) return <div>Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu.</div>;

    const { purchasedPackages } = studentData;

    if (!purchasedPackages || purchasedPackages.length === 0) {
      return (
        <div className="empty-state">
          <h2>B·∫°n ch∆∞a s·ªü h·ªØu g√≥i h·ªçc n√†o</h2>
          <p>H√£y ch·ªçn m·ªôt g√≥i h·ªçc ph√π h·ª£p ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh chinh ph·ª•c ti·∫øng Anh c·ªßa b·∫°n.</p>
          <button onClick={() => onNavigate('pricing')} className="action-btn">
            Xem b·∫£ng gi√°
          </button>
        </div>
      );
    }

    return (
      <div className="package-info-section">
        <h2>C√°c g√≥i h·ªçc c·ªßa b·∫°n</h2>
        <div className="packages-grid">
          {purchasedPackages.map((pkg, index) => {
            const progress = (pkg.completedSessions / pkg.totalSessions) * 100;
            return (
              <div key={index} className="package-card">
                <h3>{pkg.packageName}</h3>
                <p>Ng√†y mua: {new Date(pkg.purchaseDate).toLocaleDateString('vi-VN')}</p>
                <div className="progress-bar">
                  <div className="progress-label">
                    <span>Ti·∫øn ƒë·ªô</span>
                    <span>{pkg.completedSessions}/{pkg.totalSessions} bu·ªïi</span>
                  </div>
                  <div className="progress-track">
                    <div className="progress-fill" style={{ width: `${progress}%` }}></div>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    );
  };

  // Ph·∫ßn JSX ch√≠nh c·ªßa component
  return (
    <div className="student-dashboard">
      <div className="dashboard-header">
        <button className="back-btn" onClick={onBack}>‚Üê Quay l·∫°i trang ch·ªß</button>
        <h1>Dashboard h·ªçc vi√™n</h1>
      </div>
      <div className="dashboard-content">
        <nav className="dashboard-nav">
          <button
            className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`}
            onClick={() => setActiveTab('overview')}
          >
            <span className="nav-icon">üè†</span> T·ªïng quan
          </button>
          <button
            className={`nav-item ${activeTab === 'history' ? 'active' : ''}`}
            onClick={() => setActiveTab('history')}
          >
            <span className="nav-icon">üìö</span> Bu·ªïi h·ªçc c·ªßa t√¥i
          </button>
          <button
            className={`nav-item ${activeTab === 'packageInfo' ? 'active' : ''}`}
            onClick={() => setActiveTab('packageInfo')}
          >
            <span className="nav-icon">üì¶</span> Th√¥ng tin g√≥i h·ªçc
          </button>
        </nav>
        <main className="dashboard-main">
          {activeTab === 'overview' && renderOverview()}
          {activeTab === 'history' && renderTeacher()}
          {activeTab === 'packageInfo' && renderPackageInfo()}
        </main>
      </div>
    </div>
  );
};

export default StudentDashboard;